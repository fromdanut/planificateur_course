<?php

namespace PC\PlatformBundle\Repository;

/**
 * ShoppingListRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ShoppingListRepository extends \Doctrine\ORM\EntityRepository
{

    /*
        Used in ShoppingListController:viewAction.
    */
    public function findWithAllFeatures($user)
    {
        $qb = $this
                ->createQueryBuilder('s')
                ->leftJoin('s.recipes', 'recipes')
                    ->addSelect('recipes')
                ->leftJoin('recipes.image', 'image')
                    ->addSelect('image')
                ->leftJoin('recipes.categories', 'recipeCategories')
                    ->addSelect('recipeCategories')
                ->leftJoin('recipes.recipeIngredients', 'recipeIngredients')
                    ->addSelect('recipeIngredients')
                ->leftJoin('recipeIngredients.ingredient', 'ingredient')
                    ->addSelect('ingredient')
                ->leftJoin('ingredient.category', 'catIngredient')
                    ->addSelect('catIngredient')
                ->leftJoin('ingredient.unit', 'unitIngredient')
                    ->addSelect('unitIngredient')
                ->where('s.user = :user')
                    ->setParameter('user', $user);
        return $qb
          ->getQuery()
          // First time user has no Shopphing list
          ->getOneOrNullResult();
    }

    // Used in RecipeController:viewAction
    public function findIfRecipeIsInList($recipe, $user)
    {
        $qb = $this
                ->createQueryBuilder('s')
                ->leftJoin('s.recipes', 'recipes')
                    ->addSelect('recipes')
                ->where('recipes = :recipe')
                    ->setParameter('recipe', $recipe)
                ->andWhere('s.user = :user')
                    ->setParameter('user', $user)
                ->setMaxResults(1);

        return $qb
          ->getQuery()
          ->getOneOrNullResult();
    }

}
